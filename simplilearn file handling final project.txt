package Mypackage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.LinkedList;
import java.util.Scanner;


public class Lockme {
	static final String errorMessage = "Some error occured please contact admin: admin@LockedMe.Com";
			static final String projectFilesPath ="C://JAVA";
			public static void main(String[]args) throws IOException
			{
			Scanner obj = new Scanner(System.in);
			int ch;
			do
			{
			displayMenu();
			System.out.println("Enter your choice");
			ch=Integer.parseInt(obj.nextLine());
			switch(ch)
			{
			case 1:
			getAllFiles();
			break;
			case 2:createFiles(null);
			break;
			case 3: deleteAllFiles();
			break;
			case 4: searchFiles1();
			break;
			case 5: System.exit(0);
			break;
			default:System.out.println("Invalid option");
			}
			}
			while(ch>0);
			obj.close();
			}
			private static void searchFiles11() {
				// TODO Auto-generated method stub
				
			}
			public static void displayMenu()
			{
			System.out.println("\t=================================");
			System.out.println("\tWelcome to LockedMe.com");
			System.out.println("\t=================================");
			System.out.println("\tDesigned by Aishwarya Singh");
			System.out.println("\t1. Display all the files");
			System.out.println("\t2. Add a new file");
			System.out.println("\t3. Delete a file");
			System.out.println("\t4. Search a file");
			System.out.println("\t5. Exit");

			}
			//*This method will return all the files from the directory*/
			public static void getAllFiles()
			{
			try {
			File folder = new File(projectFilesPath);
			File[] listOfFiles = folder.listFiles();
			if(listOfFiles.length==0)
			{
			System.out.println("No Files exist");
			}
			else
			{
			for(var l:listOfFiles)
			{
			System.out.println(l.getName());
			}
			}
			}
			catch(Exception Ex)
			{
			System.out.println(errorMessage);
			}
			}
			//creating files
			
			public static void createFiles(String filename) throws IOException
			{
				createFileUsingFileclass();
				
				Scanner obj = new Scanner(System.in);
				String fileName;
				System.out.println("Enter the filename: ");
				fileName = obj.nextLine();
				
				 File file = new File("C://JAVA// fileName");
				//creating the file
				if(file.createNewFile()) { //in built method  to creatte a file
					System.out.println("file is created");
					
				}else { System.out.println("file already exists");
				}
				
				//file writer
				FileWriter writer = new FileWriter(file); //to write data into the files
				writer.write("Test data");
				writer.close();
				}

			

				private static void createFileUsingFileclass() {
					// TODO Auto-generated method stub
				}
				
			/*This method will delete the file based on the user input if it exists*/
			public static void deleteAllFiles()
			{
					
					// TODO Auto-generated method stub
			    try {
			    	
			    	Scanner obj = new Scanner(System.in);
					String fileName;
					System.out.println("Enter the filename: ");
					fileName = obj.nextLine();
			    	Files.deleteIfExists(Paths.get("C://JAVA// fileName"));
			    }
			     
			    catch(IOException e)
			    
			    { System.out.println("Directory not empty");
			    }
				System.out.println("File deletion Successful");
				
				}
			
			
			/*This method will search the files from the directory*/
			public static void searchFiles1() 
			{
				Scanner obj = new Scanner(System.in);
			try
			{
			String fileName;
            System.out.println("Enter the file name to be Searched");
			fileName = obj.nextLine();
			File folder = new File( projectFilesPath);
			File[] listOfFiles = folder.listFiles();
			LinkedList<String> filenames = new LinkedList<String>();
			for(var l:listOfFiles)
			filenames.add(l.getName());
			if(filenames.contains(fileName))
			System.out.println("File is available");// show for folder files
			else
			System.out.println("File is not available");// text files
			File file = new File( "C://JAVA//test 1.txt");
			BufferedReader br = new BufferedReader(new FileReader(file));
			 String st;
			  while ((st = br.readLine()) != null)
				  
		            // Print the string
		            System.out.println(st);
			
			}
			catch(Exception ex)
			{
			System.out.println(errorMessage);
			} finally
			{
			obj.close();
			}
			}
}	
			

